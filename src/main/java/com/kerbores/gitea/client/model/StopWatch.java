/*
 * Gitea API.
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kerbores.gitea.client.model;

import java.util.Objects;

import org.threeten.bp.OffsetDateTime;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * StopWatch represent a running stopwatch
 */
@ApiModel(description = "StopWatch represent a running stopwatch")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-17T06:59:13.679Z")
public class StopWatch {
  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("issue_index")
  private Long issueIndex = null;

  public StopWatch created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public StopWatch issueIndex(Long issueIndex) {
    this.issueIndex = issueIndex;
    return this;
  }

   /**
   * Get issueIndex
   * @return issueIndex
  **/
  @ApiModelProperty(value = "")
  public Long getIssueIndex() {
    return issueIndex;
  }

  public void setIssueIndex(Long issueIndex) {
    this.issueIndex = issueIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopWatch stopWatch = (StopWatch) o;
    return Objects.equals(this.created, stopWatch.created) &&
        Objects.equals(this.issueIndex, stopWatch.issueIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, issueIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopWatch {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    issueIndex: ").append(toIndentedString(issueIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

